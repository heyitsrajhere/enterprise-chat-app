Progress Report for Authentication & WebSocket Features
Registration and Testing:

The registration functionality has been successfully implemented and tested.

Login and Testing:

The login functionality has been developed and thoroughly tested.

Access Token Generation from Refresh Token:

The functionality to generate an access token from a refresh token has been created and tested.

Test Cases for Authentication:

Test cases for the authentication service have been written. The command npm run test auth.service successfully runs all tests.

WebSocket Connection and Disconnection (JWT Verification):

WebSocket connection and disconnection processes, including JWT token verification, have been implemented and tested successfully.

Multiple User Connections on Socket:

The feature to handle multiple user connections in the WebSocket has been completed and verified to work correctly.

Sending Messages to Different Organizations:

Sending messages to users in different organizations was initially tested but encountered errors.

However, sending messages within the same organization is working as expected.

Retrieving Previous Messages on Connection (Limit to 100 Messages):

Upon connecting, users are able to retrieve their previous messages, with a limit of 100 messages, as expected.

Marking Messages as Read and Updating User Status:

The functionality to mark messages as read and update the userâ€™s status has been implemented and verified.

Uploading Files in Message Attachments:

File upload functionality within messages has been implemented and is working correctly.

Tracking and Displaying Online Status and Last Seen:

The system correctly tracks and displays the online status and last seen timestamp for users.

Displaying Who Read the Message:

The feature to track and display who has read each message is functioning as intended.

This is working perfectly for individual users, but it remains to be completed for groups.

Adding and Removing Reactions to Messages:

The functionality to add and remove reactions to messages has been implemented successfully.

Admin Features:
Group/Room Creation by Admin: Admins can create chat rooms or groups.

Deleting Rooms by Admin: Admins can delete rooms.

Removing Users from Organization by Admin: Admins can remove users from the organization.

Assigning User as Moderator: Admins can assign users as moderators.
____________________________________________________________________________________________________________________

Remaining Features:
Broadcast User Join/Leave in Group: Notifications for when users join or leave a group still need to be implemented.

Moderate Deletion of Messages: The functionality for moderators to delete messages in groups needs to be finalized.

Notification Module: The notification system still needs to be completed.